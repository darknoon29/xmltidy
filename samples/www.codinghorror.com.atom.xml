<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">   	<channel>   		  		<title>Coding Horror</title>   		<link>http://www.codinghorror.com/blog/</link>   		<description>programming and human factors - Jeff Atwood</description>   		<language>en-us</language>           		<lastBuildDate>Fri, 17 Sep 2010 10:33:39 -0700</lastBuildDate>   		<pubDate>Fri, 17 Sep 2010 10:33:39 -0700</pubDate>   		<generator>http://www.typepad.com/</generator>   		<docs>http://blogs.law.harvard.edu/tech/rss</docs>   		  		<image>   			<title>Coding Horror</title>   			<url>http://www.codinghorror.com/blog/images/coding-horror-official-logo-small.png</url>   			<width>100</width>   			<height>91</height>   			<description>Logo image used with permission of the author. (c) 1993 Steven C. McConnell. All Rights Reserved.</description>   			<link>http://www.codinghorror.com/blog/</link>   		</image>   		  		<xhtml:meta xmlns:xhtml="http://www.w3.org/1999/xhtml" name="robots" content="noindex" />      	  		<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/codinghorror" /><feedburner:info xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" uri="codinghorror" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><xhtml:meta xmlns:xhtml="http://www.w3.org/1999/xhtml" name="robots" content="noindex" /><item>   			<title>YouTube vs. Fair Use</title>   			<link>http://www.codinghorror.com/blog/2010/09/youtube-vs-fair-use.html</link>   			<description><![CDATA[><p>   In <a href="http://www.codinghorror.com/blog/2007/10/youtube-the-big-copyright-lie.html">YouTube: The Big Copyright Lie</a>, I described my love-hate relationship with YouTube, at least as it existed in way back in the dark ages of 2007.  <p>   <blockquote>   Now think back through all the videos you've watched on YouTube. How many of them contained any original content?   <p>   It's perhaps the ultimate case of cognitive dissonance: by YouTube's own rules [which prohibit copyrighted content], YouTube cannot exist. And yet it does.  <p>   How do we reconcile YouTube's official hard-line position on copyright with the reality that 90% of the content on their site is clearly copyrighted and clearly used without permission? It seems YouTube has an awfully convenient "don't ask, don't tell" policy-- they make no effort to verify that the uploaded content is either original content or fair use. The copyrighted content stays up until the copyright owner complains. Then, and only then, is it removed.  </blockquote>   <p>   Today's lesson, then, is <b>be careful what you ask for</b>.  <p>   At the time, I just assumed that YouTube would never be able to resolve this problem through technology. The idea that you could somehow fingerprint every user-created uploaded video against <i>every piece of copyrighted video ever created</i> was so laughable to me that I wrote it off as impossible.  <p>   A few days ago I uploaded a small clip from the movie <a href="http://www.imdb.com/title/tt0088794/">Better Off Dead</a> to YouTube, in order to use it in the <a href="http://www.codinghorror.com/blog/2010/09/go-that-way-really-fast.html">Go That Way, Really Fast</a> blog entry. This is quintessential <b>fair use</b>: a tiny excerpt of the movie, presented in the context of a larger blog entry. So far, so good.  <p>   But then I uploaded a small clip from a different movie that I'm planning to use in another, future blog entry. Within an hour of uploading it, I received this email:  <p>   <blockquote>   Dear {username},  <p>   Your video, {title}, may have content that is owned or licensed by {company}.  <p>   No action is required on your part; however, if you are interested in learning how this affects your video, please visit <a href="http://www.youtube.com/my_videos_copyright">the Content ID Matches section of your account</a> for more information.  <p>   Sincerely,<br/>   - The YouTube Team  </blockquote>   <p>   This 90 second clip is from a recent movie. Not a hugely popular movie, mind you, but a movie you've probably heard of. This email both fascinated and horrified me. <b>How did they match a random, weirdly cropped (thanks, Windows Movie Maker) clip from the middle of a non-blockbuster movie</b> within an hour of me uploading it? This had to be some kind of automated process that checks uploaded user content against every piece of copyrighted content ever created (or the top n subset thereof), <i>exactly the kind that I thought was impossible.</i>   <p>   Uh oh.  <p>   I began to do some research. I quickly found <a href="http://www.csh.rit.edu/~parallax/">Fun with YouTube's Audio Content ID System</a>, which doesn't cover video, but it's definitely related:  <p>   <blockquote>   I was caught by surprise one day when I received an automated email from YouTube informing me that my video had a music rights issue and it was removed from the site. I didn't really care.  <p>   Then a car commercial parody I made (arguably one of my better videos) was taken down because I used an unlicensed song. That pissed me off. I couldn't easily go back and re-edit the video to remove the song, as the source media had long since been archived in a shoebox somewhere. And I couldn't simply re-upload the video, as it got identified and taken down every time. I needed to find a way to outsmart the fingerprinter. I was angry and I had a lot of free time. Not a good combination.  <p>   I racked my brain trying to think of every possible audio manipulation that might get by the fingerprinter. I came up with an almost-scientific method for testing each modification, and I got to work.  </blockquote>   <p>   Further research led me to this brief TED talk, <a href="http://www.ted.com/talks/margaret_stewart_how_youtube_thinks_about_copyright.html">How YouTube Thinks About Copyright</a>.  <p>   <blockquote>   We compare each upload against all the reference files in our database. This heat map is going to show you how the brain of this system works.  <p>   <img title="Youtube-content-detection" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b013487722cc4970c-800wi" border="0" />   <p>   Here we can see the reference file being compared to the user generated content. The system compares every moment of one to the other to see if there's a match. This means we can identify a match even if the copy uses just a portion of the original file, plays it in slow motion, and has degraded audio or video.  <p>   The scale and speed of this system is truly breathtaking -- we're not just talking about a few videos, we're talking about over 100 years of video every day between new uploads and the legacy scans we regularly do across all of the content on the site. And when we compare those 100 years of video, we're comparing it against millions of reference files in our database. It'd be like 36,000 people staring at 36,000 monitors each and every day without as much as a coffee break.  </blockquote>   <p>   I have to admit that I'm astounded by the scope, scale, and sheer effectiveness of  YouTube's new copyright detection system <i>that I thought was impossible!</i> Seriously, <a href="http://www.ted.com/talks/margaret_stewart_how_youtube_thinks_about_copyright.html">watch the TED talk</a>. It's not long. The more I researched <a href="http://www.google.com/support/youtube/bin/answer.py?hl=en&answer=83766">YouTube's video identification tool</a>, the more I realized that <b>resistance is futile</b>. It's <i>so</i> good that the only way to defeat it is by degrading your audio and video so much that you have effectively ruined it. And when it comes to copyright violations, if you can achieve mutually assured destruction, then you have won. Absolutely and unconditionally.  <p>   This is an outcome so incredible I am still having trouble believing it. But I have the automatically blocked uploads to prove it.  <p>   Now, <b>I am in no way proposing that copyright is something we should be trying to defeat or work around</b>. I suppose I was just used to the <a href="http://en.wikipedia.org/wiki/Laissez-faire">laissez faire</a> status quo on YouTube, and the idea of a video copyright detection system this effective was completely beyond the pale. My hat is off to the engineers at Google who came up with this system. They aren't the bad guys here; they offer some rather sane alternatives when copyright matches are found:  <p>   <blockquote>   If Content ID identifies a match between a user upload and material in the reference library, it applies the usage policy designated by the content owner. The usage policy tells the system what to do with the video. Matches can be to only the audio portion of an upload, the video portion only, or both.  <p>   There are three usage policies -- <b>Block, Track or Monetize</b>. If a rights owner specifies a <b>Block</b> policy, the video will not be viewable on YouTube. If the rights owner specifies a <b>Track</b> policy, the video will continue to be made available on YouTube and the rights owner will receive information about the video, such as how many views it receives. For a <b>Monetize</b> policy, the video will continue to be available on YouTube and ads will appear in conjunction with the video. The policies can be region-specific, so a content owner can allow a particular piece of material in one country and block the material in another.  </blockquote>   <p>   The particular content provider whose copyright I matched chose the draconian block policy. That's certainly not Google's fault, but I guess you could say <a href="http://www.codinghorror.com/blog/2007/07/googles-number-one-ui-mistake.html">I'm Feeling Unlucky</a>.  <p>   Although the 90 second clip I uploaded is clearly copyrighted content -- I would never dispute that -- <b>my intent is not to facilitate illegal use, but to "quote" the movie scene as part of a larger blog entry.</b> YouTube does provide recourse for uploaders; they make it easy to file a dispute once the content is flagged as copyrighted. So I dutifully filled out the dispute form, indicating that I felt I had a reasonable claim of fair use.  <p>   <img alt="Youtube-fair-use-dispute" title="Youtube-fair-use-dispute" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b013487721471970c-800wi" style="border:1px solid silver" />   <p>   Unfortunately, my fair use claim was denied without explanation by the copyright holder.   <p>   Let's consider the four guidelines for fair use I outlined in <a href="http://www.codinghorror.com/blog/2007/10/youtube-the-big-copyright-lie.html">my original 2007 blog entry</a>:  <p>   <ol>   <li>Is the use transformative?  <li>Is the source material intended for the public good?  <li>How much was taken?  <li>What's the market effect?  </ol>   <p>   While we're clear on 3 and 4, items 1 and 2 are hazy in a mashup. This would definitely be transformative, and I like to think that I'm writing for the erudition of myself and others, not merely to entertain people. I uploaded with the <i>intent</i> of the video being viewed through a blog entry, with YouTube as the content host only. But it was still 90 seconds of the movie viewable on YouTube by anyone, context free.   <p>   So I'm torn.  <p>   On one hand, this is an <i>insanely</i> impressive technological coup. The idea that YouTube can (with the assistance of the copyright holders) really validate every minute of uploaded video against <b>every minute of every major copyrighted work</b> is unfathomable to me. When YouTube promised to do this to placate copyright owners, I was sure they were delaying for time. But much to my fair-use-loving dismay, they've actually gone and <i>built</i> the damn thing -- and it works.  <p>   Just, maybe, it works a little <i>too</i> well. I'm still looking for video sharing services that <a href="http://webapps.stackexchange.com/questions/6445/web-video-sharing-service-with-fair-use-protection">offer some kind of fair use protection</a>.   <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">JIRA Studio</a> - SVN hosting, issue tracking, CI and Google Apps integration. <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/09/youtube-vs-fair-use.html</guid>   			<pubDate>Fri, 17 Sep 2010 10:33:39 -0700</pubDate>   		</item>   	  		<item>   			<title>Revisiting Solid State Hard Drives</title>   			<link>http://www.codinghorror.com/blog/2010/09/revisiting-solid-state-hard-drives.html</link>   			<description><![CDATA[><p>   It's been almost a year since I covered <a href="http://www.codinghorror.com/blog/2009/10/the-state-of-solid-state-hard-drives.html">The State of Solid State Hard Drives</a>. Not a heck of a lot has changed, but the topic is still worth revisiting, because if you care at all about how your computer performs, <b>solid state hard drives remain a life changing experience</b>. Here's why:  <p>   <ol>   <li>A solid state hard drive is easily the best and most obvious performance upgrade you can make on any computer for a given amount of money. Unless your computer is absolute crap to start with.  <li>The practical minimum solid state hard drive size, <b>128 GB</b>, has modestly declined in price -- from about $350 to about $250.  </ol>   <p>   (yes, you can get by with 64 GB, but at least with my Windows installs I find that I have to <i>think</i> about disk space with 64 GB, whereas with 128 GB I don't have to worry -- ever. <a href="http://www.codinghorror.com/blog/2005/08/dont-make-me-think-second-edition.html">Don't make me think, man!</a>)  <p>   The rest of the components inside your PC are downright boring in comparison. CPUs? All stupid fast at any price, with more cores and gigahertz than you'll ever need unless you're one of those freaks who does nothing but raytracing and video transcoding all day long. Memory? Dirt cheap, and average users won't need more than 2 gigabytes of the stuff in practical use, which at the current going rate for DDR3 is less than 50 bucks.  <p>   Thanks to the <a href="http://www.codinghorror.com/blog/2006/12/moores-law-in-practical-terms.html">neverending march of Moore's Law</a>, PCs are becoming speedy at <i>any</i> price these days. It's difficult for me to <a href="http://www.codinghorror.com/blog/2009/12/building-a-pc-part-vi-rebuilding.html">muster any enthusiasm for the latest Intel CPU updates</a> when I spend almost zero real world time waiting for the CPU to do anything on my computer. I guess it's true: absolute power corrupts absolutely.  <p>   <a href="http://www.despair.com/power.html"><img alt="Absolute-power-corrupts-absolutely" title="Absolute-power-corrupts-absolutely" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134875d3aa8970c-800wi" border="0" /></a>   <p>   But hard drives, now, there's where you can pay a bit more and see a groundbreaking, generational leap in performance <i>worthy</i> of that investment -- as long as you skip over the old and busted spinning rust hard drives, and choose a newfangled <b>solid state hard drive</b>.  <p>   The current king of the hill seems to be the <a href="http://www.anrdoezrs.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820148348%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-Crucial%2BTechnology-_-20148348&cjsku=N82E16820148348">Crucial RealSSD C300</a>.  <p>   <a href="http://www.anrdoezrs.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820148348%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-Crucial%2BTechnology-_-20148348&cjsku=N82E16820148348"><img alt="RealSSD C300" title="RealSSD C300" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134875d5de7970c-800wi" border="0" /></a>   <p>   Pretty sexy, right? Oh, who am I kidding, it's a boring slab of aluminum and silicon. But like all truly sexy things, what turns me on is the part I <i>can't</i> see -- the <a href="http://www.techreport.com/articles.x/19162/9">sexy, sexy, <i>sexy</i> performance inside this baby</a>.  <p>   <a href="http://www.techreport.com/articles.x/19162/9"><img alt="Tr-drivebench" title="Tr-drivebench" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134875d8710970c-800wi" border="0" /></a>   <p>   See those bars dragging down the bottom of this graph? All spinning rust. Heck, even the SSD I recommended last year is only middle of the pack here. AnandTech <a href="http://www.anandtech.com/show/3812/the-ssd-diaries-crucials-realssd-c300/4">concurs</a> -- the <a href="http://www.anrdoezrs.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820148348%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-Crucial%2BTechnology-_-20148348&cjsku=N82E16820148348">Crucial RealSSD C300</a> is top dog, at least for now.  <p>   (Be careful, though, that your operating system supports the <a href="http://en.wikipedia.org/wiki/TRIM">SSD TRIM command</a>, otherwise you'll suffer severe performance degradation over time with almost any SSD. Operating systems earlier than Windows 7 and the latest, greatest Linux kernel should beware -- and, shockingly, OSX still doesn't support TRIM!)  <p>   Where it gets trickier, though, is when you need more than 128 GB of storage, or when you are limited to one 2.5" hard drive -- like in a laptop. In that case, ideally you'd like something that has the <i>speed</i> of a solid state hard drive, but the <i>capacity</i> (and economical price per gigabyte) of a traditional magnetic platter hard drive. You might say &hellip; <b>a hybrid hard drive</b>, <a href="http://www.codinghorror.com/blog/2006/09/vista-and-the-rise-of-the-flash-drives.html">the kind I was dreaming about back in 2006</a> &hellip;  <p>   <blockquote>   After all this analysis, it's clear to me that traditional hard drives and flash memory are quite complimentary; they're strong in different areas. But flash drives are the future. They will definitely replace hard drives in almost all low end and low power devices-- and future high performance hard drives will need to have a substantial chunk of flash memory on board to stay competitive.  </blockquote>   <p>   I had always been disappointed that hybrid hard drives, drives that combine both flash memory <i>and</i> traditional magnetic platters, never came to fruition. It was either traditional or SSD and nothing in between. It seemed like such an obvious "best of both worlds" scenario to me. But I recently discovered that <b>decent hybrid drives do finally exist</b> -- though in a small and mostly unheralded way.   <p>   <a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16822148591%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Hard%2BDrives%2B-%2BNotebooks%2B%2F%2BLaptops-_-Seagate-_-22148591&cjsku=N82E16822148591">Seagate's Momentus XT</a> takes a totally respectable 2.5", 7200 RPM drive with a 32 megabyte buffer and <b>combines it with 4 gigabytes of flash memory</b>. The result is the <a href="http://www.anandtech.com/show/3734/seagates-momentus-xt-review-finally-a-good-hybrid-hdd">exactly what I had always hoped</a>:  <p>   <blockquote>   Seagate's Momentus XT should become the standard hard drive in any notebook shipped. The biggest problem I have with using any brand new machine, regardless of how fast it is, is that it never feels fast because it usually has a HDD and not an SSD. While the Momentus XT isn't quite as fast as an SSD, it's a significant improvement over the mechanical drives found in notebooks today.  <p>   In many cases the Momentus XT performs like a VelociRaptor, but in a lower power, quieter package. The impact of adding just a small amount of SLC NAND is tremendous. The potential for hybrid drives continues to be huge; what Seagate has shown here is that with a minimal amount of NAND you can achieve some tremendous performance gains.  </blockquote>   <p>   And the best part? <a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16822148591%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Hard%2BDrives%2B-%2BNotebooks%2B%2F%2BLaptops-_-Seagate-_-22148591&cjsku=N82E16822148591">500 gigabytes of near-SSD performance for $130!</a> Or, if that's too spendy, how about <a href="http://www.kqzyfj.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16822148592%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Hard%2BDrives%2B-%2BNotebooks%2B%2F%2BLaptops-_-Seagate-_-22148592&cjsku=N82E16822148592">320 gigabytes of near-SSD performance for $99</a>?  <p>   I've ordered a few of these drives to upgrade my laptops and <a href="http://www.codinghorror.com/blog/2008/04/building-your-own-home-theater-pc.html">home theater PC</a>. Sure, I'll invest in a SSD for my beastly desktop, but I can't justify $300 to put a SSD in a laptop I spent all of $800 on, or a home theater PC that set me back a mere $500. But <b>a hundred bucks for near-SSD performance <i>and</i> decent capacity</b>? Sign me up. And hard drive vendors: although I love SSDs to death, please keep these improved hybrid drives coming, too, please!  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">JIRA Studio</a> - SVN hosting, issue tracking, CI and Google Apps integration. <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/09/revisiting-solid-state-hard-drives.html</guid>   			<pubDate>Wed, 15 Sep 2010 02:30:23 -0700</pubDate>   		</item>   	  		<item>   			<title>Go That Way, Really Fast</title>   			<link>http://www.codinghorror.com/blog/2010/09/go-that-way-really-fast.html</link>   			<description><![CDATA[><p>   When it comes to running Stack Overflow, <a href="http://stackoverflow.com/about/management">the company</a>, I take all my business advice from one person, and one person alone: <b>Curtis Armstrong</b>.  <p>   <a href="http://www.imdb.com/name/nm0035664/"><img alt="Curtis Armstrong" title="Curtis Armstrong" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01348740aa43970c-800wi" border="0" /></a>   <p>   More specifically, Curtis Armstrong as <b>Charles De Mar</b> from the 1985 absurdist teen comedy classic, <a href="http://www.imdb.com/title/tt0088794/">Better Off Dead</a>. When asked for advice on how to ski down a particularly treacherous mountain, he replied:  <p>   <a href="http://www.youtube.com/watch?v=lEHZJNQ5Y4A"><img alt="Go that way, really fast. If something gets in your way... turn." title="Go that way, really fast. If something gets in your way... turn." src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133f4205ea0970b-800wi" /></a>   <p>   <b>Go that way, <i>really</i> fast. If something gets in your way &hellip; turn.</b>   <p>   (I recommend watching <a href="http://www.youtube.com/watch?v=lEHZJNQ5Y4A">the video clip</a>, or, better yet, <a href="http://www.amazon.com/dp/B00005JKFA/?tag=codinghorror-20">the entire movie</a>. It's brilliant in ways I can't possibly explain here.)  <p>   In the five months since we <a href="http://blog.stackoverflow.com/2010/05/announcing-our-series-a/">announced our funding</a>, we have &hellip;  <p>   <ul>   <li>Built an <a href="http://www.codinghorror.com/blog/2010/05/on-working-remotely.html">international team</a>   <li>Created an entirely new open, democratic process for creating Q&A sites at <a href="http://area51.stackexchange.com/faq">Area 51</a>   <li>Launched ~24 new community-driven <a href="http://stackexchange.com/sites">Stack Exchange network sites</a>   <li>Implemented <a href="http://blog.stackoverflow.com/2010/07/new-per-site-metas/">per-site meta discussion</a> and <a href="http://blog.stackoverflow.com/2010/08/chat-now-in-public-beta/">per-site real time chat</a>   <li>Rolled out new versions of <a href="http://careers.stackoverflow.com/">Careers</a> and <a href="http://careers.stackoverflow.com/Jobs">Jobs</a>   <li>Built and open-sourced a tool for exploring and sharing all our creative commons data in the <a href="http://odata.stackexchange.com/">Stack Exchange Data Explorer</a>   <li>Finalized V1 of the <a href="http://stackapps.com/">Stack Exchange API</a>, for building your own apps against our Q&A platform  </ul>   <p>   &hellip; and honestly, I'm a little worried we're <i>still not going fast enough</i>.  <p>   There are any number of Stack Overflow engine clones out there already, and I say more power to 'em. I'm proud to have something worth copying. If we do nothing else except help lead the world away from the ancient, creaky, horribly broken bulletin board model of phpBB and vBulletin -- attempting to get information out of those things is like <b>panning for gold in a neverending river of sewage</b> -- then that is more than I could have ever hoped for.   <p>   It is our stated goal as a company to live in harmony with the web, by only doing things that we believe make the internet better, at least in some small way. No, seriously. It's in writing and everything, I swear! We're not here to subvert or own anyone or anything. We just love community, and we love getting great answers to our questions. So if something gets in our way while doing that, well, we're not gonna fight you. <b>We'll just turn</b>. And keep going forward, really fast. Which is why those clones better move quick if they want to keep up with us.   <p>   While I like to think that having Charles De Mar as a business advisor is unique to our company, the idea that speed is important is hardly original to us. For example, certain Google projects also appear to understand <a href="http://www.codinghorror.com/blog/2007/02/boyds-law-of-iteration.html">Boyd's Law of Iteration</a>.  <p>   <blockquote>   Boyd decided that the primary determinant to winning dogfights was not observing, orienting, planning, or acting better. The primary determinant to winning dogfights was observing, orienting, planning, and acting <i>faster</i>. In other words, how quickly one could iterate. <i>Speed of iteration</i>, Boyd suggested, beats <i>quality of iteration</i>.  </blockquote>   <p>   Speed of iteration -- the <a href="http://en.wikipedia.org/wiki/Google_Chrome">Google Chrome</a> project has it.  <p>   <table cellpadding="4" cellspacing=4" width="400">   <tr><td>1.0</td><td>December 11, 2008</td></tr>   <tr><td>2.0</td><td>May 24, 2009</td></tr>   <tr><td>3.0</td><td>October 12, 2009</td></tr>   <tr><td>4.0</td><td>January 25, 2010</td></tr>   <tr><td>5.0</td><td>May 25, 2010</td></tr>   <tr><td>6.0</td><td>September 2, 2010</td></tr>   </table>   <p>   Chrome was a completely respectable browser in V1 and V2. The entire project has moved forward so fast that it now is, at least in my humble opinion, the best browser on the planet. Google went from nothing, no web browser at all, to best-of-breed in <b>under two years</b>. Meanwhile, Internet Explorer took longer than the entire development period of Chrome to go from version 7 to version 8. And by the time Internet Explorer 9 ships -- even though it's actually looking like Microsoft's best, most competent technical upgrade of the browser yet -- it will be completely outclassed at launch by both Firefox and Chrome.  <p>   The <a href="http://en.wikipedia.org/wiki/Android_(operating_system)">Google Android</a> project is another example. Android doesn't have to be better than the iPhone (and it most <i>definitely</i> isn't; it's been mediocre at best until recent versions). They just need to be <i>faster at improving</i>. Google is pushing out <a href="http://en.wikipedia.org/wiki/Android_(operating_system)#Update_history">Froyos and Gingerbreads and Honeycombs</a> with incredible, breakneck speed. Yes, Apple has indisputably better taste -- and an impeccably controlled experience. But at their current rate of progress, they'll be playing second or third fiddle to Google in the mobile space inside a few years. It's inevitable.  <p>   So, until further notice, we'll be following the same strategy as the Android and Chrome teams. <b>We're going to go that way, <i>really</i> fast. And if something gets in our way, we'll turn.</b>   <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">JIRA Studio</a> - SVN hosting, issue tracking, CI and Google Apps integration. <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/09/go-that-way-really-fast.html</guid>   			<pubDate>Sun, 12 Sep 2010 00:52:55 -0700</pubDate>   		</item>   	  		<item>   			<title>Vampires (Programmers) versus Werewolves (Sysadmins)</title>   			<link>http://www.codinghorror.com/blog/2010/08/vampires-programmers-versus-werewolves-sysadmins.html</link>   			<description><![CDATA[><p>   Kyle Brandt, a system administrator, asks <a href="http://blog.serverfault.com/post/893001713/should-developers-have-access-to-production">Should Developers have Access to Production?</a>   <p>   <blockquote>   A question that comes up <a href="http://serverfault.com/questions/62885/sysadmin-developer-responsibilities">again</a> and <a href="http://serverfault.com/questions/7907/access-to-the-production-systems-for-non-sys-admins">again</a> in web development companies is:  <p>   <i>"Should the developers have access to the production environment, and if they do, to what extent?"</i>   <p>   My view on this is that as a whole they should have limited access to production. A little   disclaimer before I attempt to justify this view is that this standpoint is in no way based on the perceived quality or attitude of the developers -- so please don't take it this way.  </blockquote>   <p>   This is a tricky one for me to answer, because, well, I'm a developer. More specifically, <b>I'm one of the developers Kyle is referring to</b>. How do I know that? Because Kyle works for our company, Stack Overflow Internet Services Incorporated&copy;&reg;&trade;. And Kyle is a great system administrator. How do I know that? Two reasons:  <p>   <ol>   <li>He's one of the top <a href="http://serverfault.com">Server Fault</a> users.  <li>He had the audacity to write about this issue on the Server Fault blog.  </ol>   <p>   From my perspective, <i>the whole point of the company</i> is to talk about what we're doing. <a href="http://www.codinghorror.com/blog/2007/07/yes-but-what-have-you-done.html">Getting things done is important</a>, of course, but we have to stop occasionally to write up what we're doing, how we're doing it, and why we're even doing it in the first place -- including all our doubts and misgivings and concerns. If we don't, we're cheating ourselves, and you guys, out of something much deeper. Yes, writing about what we're doing and explaining it to the community helps us focus. It lets our peers give us feedback. But most importantly of all, it lets <i>anyone</i> have the opportunity to learn from our many, many mistakes &hellip; and who knows, perhaps even the occasional success.   <p>   That's basically the entire philosophy behind our <a href="http://stackexchange.com/">Stack Exchange Q&A network</a>, too. Let's <i>all</i> talk about this stuff in public, so that <b>we can teach each other how to get better at whatever the heck it is we love to do</b>.  <p>   (Sometimes I get the feeling this idea makes <a href="http://www.joelonsoftware.com/AboutMe.html">my co-founder</a> nervous, which I continually struggle to understand. If we don't walk the walk, why are we even doing this? But I digress.)  <p>   The saga of System Administrators versus Programmers is not a new one; I don't think I've ever worked at any company where these two factions weren't continually battling with each other in some form. It's truly an epic struggle, but to understand it, you have to appreciate that <b>both System Administrators and Programmers have different, and perhaps complementary, supernatural powers</b>.  <p>   Programmers are like <b>vampires</b>. They're frequently up all night, paler than death itself, and generally <a href="http://www.codinghorror.com/blog/2007/10/geek-diet-and-exercise-programs.html">afraid of being exposed to daylight</a>. Oh yes, and they tend think of themselves (or at least their code) as immortal.  <p>   <img alt="Bela-lugosi-dracula" title="Bela-lugosi-dracula" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133f35bd97b970b-800wi" border="0" />   <p>   System Administrators are like <b>werewolves</b>. They may look outwardly ordinary, but are incredibly strong, mostly invulnerable to stuff that would kill regular people -- and prone to strange transformations during a moon "outage".  <p>   <img alt="Wolfman" title="Wolfman" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133f35bd9a1970b-800wi" border="0" />   <p>   Let me be very clear that just as Kyle respects programmers, I have <a href="http://www.codinghorror.com/blog/2009/05/server-fault-calling-all-lusers.html">a deep respect for system administrators</a>:  <p>   <blockquote>   Although there is certainly some crossover, we believe that the programming community and the IT/sysadmin community are different beasts. Just because you're a hotshot programmer doesn't mean you have mastered networking and server configuration. And I've met a few sysadmins who could script circles around my code. That's why Server Fault gets its own domain, user profiles, and reputation system.  </blockquote>   <p>   Different "beasts" indeed.  <p>   Anyway, if you're looking for a one size fits all answer to the question of how much access programmers should have to production environments, I'm sorry, I can't give you one. Every company is different, every team is different. I know, it's a sucky answer, but <i>it depends</i>.   <p>   However, as anyone who has watched the latest season of <a href="http://en.wikipedia.org/wiki/True_Blood">True Blood</a> (or, God help us all, the <a href="http://www.imdb.com/title/tt1325004/">Twilight Eclipse</a> movie) can attest, there <i>are</i> ways for vampires and werewolves to work together. In a healthy team, everyone feels their abilities are being used and not squandered.   <p>   On our team, we're all fair-to-middling sysadmins. But there are a million things to do, and having a professional sysadmin means we can focus on the programming while the networking, hardware, and operational stuff gets a whole lot more TLC and far better (read: non-hacky) processes put in place. We're happy to refocus our efforts on what we're expert at, and let Kyle put his skills to work in areas that he's expert at. Now, that said, we don't want to cede full access to the production servers -- but there's a happy middle ground where our access becomes infrequent and minor over time, except in the hopefully rare event of an all hands on deck emergency.  <p>   The art of managing vampires and werewolves, I think, is to ensure that they spend their time not fighting amongst themselves, but instead, <b>using those supernatural powers together to achieve a common goal they could not otherwise</b>. In my experience, when programmers and system administrators fight, it's because they're bored. You haven't given them a sufficiently daunting task, one that requires the full combined use of their unique skills to achieve.  <p>   Remember, it's not vampires versus werewolves. It's vampires <i>and</i> werewolves.  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">JIRA Studio</a> - SVN hosting, issue tracking, CI and Google Apps integration. <a href="http://www.atlassian.com/hosted/studio?utm_source=coding_horror&utm_medium=text&utm_term=Jira_Studio&utm_content=%20%20SVN%20hosting%2C%20issue%20tracking%2C%20CI%20and%20Google%20Apps%20integration&utm_campaign=Display%2BAdvertising%2B-%2BInedo%2BMedia" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/08/vampires-programmers-versus-werewolves-sysadmins.html</guid>   			<pubDate>Fri, 27 Aug 2010 06:26:43 -0700</pubDate>   		</item>   	  		<item>   			<title>What's On Your Utility Belt?</title>   			<link>http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html</link>   			<description><![CDATA[><p>   Like any self-respecting geek, I'm mostly an <a href="http://www.codinghorror.com/blog/2007/10/geek-diet-and-exercise-programs.html">indoor enthusiast</a>.  <p>   But on those unfortunate occasions when I am compelled -- for reasons entirely beyond my control -- to leave the house, I do so fully armed with my crucial <b>utility belt items</b>. Yes, you heard me, I transform from the geeky Bruce Wayne <i>to the gosh-darned Batman!</i>   <p>   <img alt="Batman-utility-belt" title="Batman-utility-belt" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134862e1dcf970c-800wi" border="0" />   <p>   At least, that's how I like to think of it.  <p>   I've been talking about this <a href="http://www.codinghorror.com/blog/2008/01/whats-on-your-keychain-2008-edition.html">every-day carry stuff</a> for <a href="http://www.codinghorror.com/blog/2006/06/whats-on-your-keychain-in-2006.html">quite</a> a <a href="http://www.codinghorror.com/blog/2005/03/whats-on-your-keychain.html">while</a> now. The 2010 edition of <b>my personal utility belt</b> is mostly subtle tweaks, but I daresay it's the best one yet.  <p>   <img alt="Atwood-keychain-2010" title="Atwood-keychain-2010" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134862e1b74970c-800wi" border="0" />   <p>   The art of <a href="http://en.wikipedia.org/wiki/Every_day_carry">every-day carry</a> must go on. What you see here is the contents of my pocket:  <p>   <ol>   <li><b><a href="http://www.amazon.com/exec/obidos/ASIN/B001IWOQXQ/codinghorror-20">Patriot 32 GB USB flash drive</a></b><br/><br/>      Now you can have a whole freakin' hard drive worth of files in your pocket. Just in case, you know, you have an emergency need to <a href="http://en.wikipedia.org/wiki/Independence_Day_(film)">upload a virus to an alien mothership</a>, or something. Beware the many cheap, slow USB flash drives out there; this one is a real gem. It's inexpensive, and per my measurements, about as fast as they get. This is important because the larger the flash drive, <a href="http://www.codinghorror.com/blog/2008/06/large-usb-flash-drive-performance.html">the more important speed becomes</a>. Hard to believe I've gone from carrying a 512 megabyte flash drive in 2005 to a 32 <i>gigabyte</i> flashdrive in 2010.<br/><br/>      <li><b><a href="http://www.amazon.com/exec/obidos/ASIN/B0007UQ1CO/codinghorror-20">Leatherman Squirt P4</a></b><br/><br/>      Ounce for ounce, nothing beats the utility of the Leatherman Squirt. This time I opted for the plier (P) version instead of the scissors (S), and after seeing how much more generally useful the pliers are, I am now a little ashamed to admit I ever carried the wussy scissors version. Pliers all the way, baby. And yes, that is a <a href="http://www.imdb.com/title/tt0110912/">Pulp Fiction</a> joke you see on it.  <br/><br/>      <li><b><a href="http://www.amazon.com/exec/obidos/ASIN/B002YKL2ZQ/codinghorror-20">Fenix mini AAA LED flashlight model LD01R2</a></b><br/><br/>      Since I've been carrying them in 2005, the average LED flashlight has gone from bright, to very bright, to amazingly bright, to <i>ridiculously blinding laser-like bright</i>. It's scary how bright these fancy milled aluminum AAA LED flashlights get now. What I like about this one is that it lets you trade off stupid-brightness for something practical, like greater runtime: you can twist the top to switch levels: 9 Lumens for 11 hours, 28 Lumens for 3.5 hours, or 85 Lumens for 1 hour.<br/><br/>      <li><b><a href="http://www.amazon.com/exec/obidos/ASIN/B002MD01KC/codinghorror-20">Small Nite Ize s-biner</a></b><br/><br/>      These little nite-ize carabiners are awesome for quick attachment and detachment of your EDC items, but I'll warn you: resist the urge to put everything you carry on a carabiner, because if you do, the weight and "jangliness" goes up a lot -- and <a href="http://www.amazon.com/exec/obidos/ASIN/B0037GZZCC/codinghorror-20">this way lies madness</a>. Consider how many items you actually <i>remove</i> from your keychain regularly. For me, the only item I frequently removed to work with was the Squirt, so that's the only one I put on a carabiner.  </ol>   <p>   Rest assured, everything here is carefully selected with the appropriate levels of monomaniacal attention to detail. For this weight and size, I don't think you can do better. (And don't think I've forgotten about <a href="http://www.codinghorror.com/blog/2009/04/optimizing-your-wallet.html">optimizing my wallet</a>, either. Oh no. Quite the contrary.)  <p>   However, I have to add a special category this year for the other must-have EDC utility belt item: the smartphone. <b>What self-respecting superhero would leave the house these days without their smartphone?</b> I'm not religious about it, but <a href="http://www.codinghorror.com/blog/2009/06/the-iphone-software-revolution.html">I use and rather like the iPhone 4</a>, and I'm continually amazed how many things it does that I used to carry separate items for:  <p>   <ul>   <li>cell phone (obviously)  <li>"Nintendo DSwhatever" for portable gaming  <li>GPS  <li>point and shoot digital camera  <li>near-desktop quality mobile web browser and email client  <li>mp3 player with speakers  <li>audio and hi-def video recorder  <li>DVD player  <li>ebook reader  <li>watch, alarm  <li>emergency flashlight (via front facing LED flash control)  <li>scanner  <li>level and ruler  </ul>   <p>   Smartphones really are <a href="http://gadgets.stackexchange.com/">the ultimate gadget</a>. The list of functions is already enormous, and I'm sure I'm leaving out a few other things that you can do with a modern smartphone.  <p>   In a pinch, I <i>could</i> conceivably drop the AAA LED flashlight and the USB flash drive from my EDC kit and substitute the smartphone. Not exactly, mind you, but it's getting closer every year. At this rate, Apple could introduce a flip-out blade on the iPhone 7 and reduce my entire EDC kit to one item.  <p>   Anyway, that's what's on my utility belt in 2010. What's on yours?  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_content=A&utm_campaign=Studio%2B2.1" rel="nofollow">JIRA Studio</a> - Hosted software development suite. Build better software. Faster. <a href="http://www.atlassian.com/hosted/studio/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_content=A&utm_campaign=Studio%2B2.1" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html</guid>   			<pubDate>Fri, 13 Aug 2010 05:10:50 -0700</pubDate>   		</item>   	  		<item>   			<title>Groundhog Day, or, the Problem with A/B Testing</title>   			<link>http://www.codinghorror.com/blog/2010/07/groundhog-day-or-the-problem-with-ab-testing.html</link>   			<description><![CDATA[><p>   On a recent airplane flight, I happened to catch the movie <a href="http://www.imdb.com/title/tt0107048/">Groundhog Day</a>. Again.  <p>   <img class="asset  asset-image at-xid-6a0120a85dcdae970b0133f269b445970b" alt="Groundhog-day-movie-bill-murray" title="Groundhog-day-movie-bill-murray" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133f269b445970b-800wi"/>   <p>   If you aren't familiar with this classic film, the premise is simple: Bill Murray, somehow, gets stuck reliving the same day over and over.  <p>   It's been at least 5 years since I've seen Groundhog Day. I don't know if it's my advanced age, or what, but it really struck me on this particular viewing: this is no comedy. There's a veneer of broad comedy, yes, but <b>lurking just under that veneer is a deep, dark existential conundrum.</b>   <p>   It might be amusing to relive the same day a few times, maybe even a few dozen times. But an entire year of the same day -- an entire <i>decade</i> of the same day -- everything happening in precisely, exactly the same way? My back of the envelope calculation easily ran to a decade. But I was wrong. The director, Harold Ramis <a href="http://www.wolfgnards.com/index.php/2009/08/18/harold-ramis-responds-to-the-wolf-gnards">thinks it was actually 30 or 40 years</a>.  <p>   <blockquote>   I think the 10-year estimate is too short. It takes at least 10 years to get good at anything, and alloting for the down time and misguided years [Phil] spent, it had to be more like 30 or 40 years [spent reliving the same day].  </blockquote>   <p>   We only see bits and pieces of the full experience in the movie, but this time my mind began filling in the gaps. Repeating the same day for <i>decades</i> plays to our secret collective fear that our lives are irrelevant and ultimately pointless. None of our actions -- even suicide, in endless grisly permutations -- ever change anything. What's the point? Why bother? How many of us are trapped in here, and how can we escape?  <p>   This is some dark, scary stuff when you really think about it.  <p>   <blockquote>   You want a prediction about the weather, you're asking the wrong Phil.    <p>                     I'll give you a winter prediction.<br>   It's gonna be cold,<br>   it's gonna be gray,<br>   and it's gonna last you for the rest of your life.  </blockquote>   <p>   Comedy, my ass. I wanted to cry.  <p>   But there is a way out: redemption through repetition. If you have to watch Groundhog Day a few times to appreciate it, you're not alone. Indeed, that seems to be the whole point. Just <a href="http://rogerebert.suntimes.com/apps/pbcs.dll/article?AID=/20050130/REVIEWS08/501300301/1023">ask Roger Ebert</a>:  <p>   <blockquote>   "Groundhog Day" is a film that finds its note and purpose so precisely that its genius may not be immediately noticeable. It unfolds so inevitably, is so entertaining, so apparently effortless, that you have to stand back and slap yourself before you see how good it really is.  <p>   Certainly I underrated it in my original review; I enjoyed it so easily that I was seduced into cheerful moderation. But there are a few films, and this is one of them, that burrow into our memories and become reference points. When you find yourself needing the phrase This is like "Groundhog Day" to explain how you feel, a movie has accomplished something.  </blockquote>   <p>   There's something delightfully <a href="http://en.wikipedia.org/wiki/Ouroboros">Ouroboros</a> about the epiphanies and layered revelations in repeated viewings of a movie <i>that is itself about (nearly) endless repetition</i>.  <p>   Which, naturally, <b>brings me to <a href="http://en.wikipedia.org/wiki/A/B_testing">A/B testing.</a></b> That's what Phil spends most of those thirty years doing. He spends it pursuing a woman, technically, but it's <i>how</i> he does it that is interesting:  <p>   <blockquote>   Rita: This whole day has just been one long setup.  <p>   Phil: It hasn't.  <p>   Rita: And I hate fudge!  <p>   Phil: [making a mental list] No white chocolate. No fudge.  <p>   Rita: What are you doing? Are you making some kind of list? Did you call my friends and ask what I like and what I don't like? Is this what love is for you?  <p>   Phil: This is real. This is love.  <p>   Rita: Stop saying that! You must be crazy.  </blockquote>   <p>   Phil doesn't just go on one date with Rita, he goes on <i>thousands</i> of dates. During each date, he makes note of what she likes and responds to, and drops everything she doesn't. At the end he arrives at -- quite literally -- the perfect date. Everything that happens is the most ideal, most desirable version of all possible outcomes on that date on that particular day. Such are the luxuries afforded to a man repeating the same day forever.  <p>   <img class="asset  asset-image at-xid-6a0120a85dcdae970b0134858f4563970c image-full" alt="Groundhog-day-phil-rita" title="Groundhog-day-phil-rita" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134858f4563970c-800wi" border="0"  />   <p>   <b>This is the purest form of A/B testing imaginable.</b> Given two choices, pick the one that "wins", and keep repeating this ad infinitum until you arrive at the ultimate, most scientifically desirable choice. Your <a href="http://www.codinghorror.com/blog/2009/09/9-ways-marketing-weasels-will-try-to-manipulate-you.html">marketing weasels</a> would probably collapse in an ecstatic, religious fervor if they could achieve anything even remotely close to the level of perfect A/B testing depicted in Groundhog Day.  <p>   But at the end of this perfect date, something impossible happens: <b>Rita rejects Phil</b>.  <p>   Phil wasn't making these choices because he honestly believed in them. He was making these choices because he wanted a specific outcome -- winning over Rita -- and the experimental data told him which path he should take. Although the date was technically perfect, it didn't ring true to Rita, and that made all the difference.  <p>   That's the problem with A/B testing. It's empty. It has no feeling, no empathy, and at worst, <a href="http://learningischange.com/2010/01/22/question-22-of-365-farmville-practices-ghetto-testing-why-arent-we/">it's dishonest</a>. As my friend Nathan Bowers <a href="http://twitter.com/NathanBowers/status/16801715177">said</a>:  <p>   <blockquote>   A/B testing is like sandpaper. You can use it to smooth out details, but you can't actually create anything with it.  </blockquote>   <p>   The next time you reach for A/B testing tools, remember what happened to Phil. You can achieve a shallow local maximum with A/B testing -- but you'll never win hearts and minds. If you, or anyone on your team, is still having trouble figuring that out, well, the solution is simple.  <p>   <b>Just watch Groundhog Day again</b>.  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/hosted/studio/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_content=A&utm_campaign=Studio%2B2.1" rel="nofollow">JIRA Studio</a> - Hosted software development suite. Build better software. Faster. <a href="http://www.atlassian.com/hosted/studio/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_content=A&utm_campaign=Studio%2B2.1" rel="nofollow">Free trial »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/07/groundhog-day-or-the-problem-with-ab-testing.html</guid>   			<pubDate>Tue, 20 Jul 2010 03:05:37 -0700</pubDate>   		</item>   	  		<item>   			<title>Whatever Happened to Voice Recognition?</title>   			<link>http://www.codinghorror.com/blog/2010/06/whatever-happened-to-voice-recognition.html</link>   			<description><![CDATA[><p>   Remember that Scene in <a href="http://www.imdb.com/title/tt0092007/">Star Trek IV</a> where Scotty tried to use a Mac Plus?  <p>   <a href="http://www.youtube.com/watch?v=19BWJQ8kjrw"><img class="asset  asset-image at-xid-6a0120a85dcdae970b013484aecc1a970c" alt="Star-trek-4-apple-mac-plus" title="Star-trek-4-apple-mac-plus" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b013484aecc1a970c-800wi" border="0" /></a>   <p>   Using a mouse or keyboard to control a computer? Don't be silly. In the future, clearly there's only one way computers will be controlled: by <b>speaking to them</b>.  <p>   There's only <a href="http://robertfortner.posterous.com/the-unrecognized-death-of-speech-recognition">one teeny-tiny problem</a> with this magical future world of computers we control with our voices.  <p>   <img class="asset  asset-image at-xid-6a0120a85dcdae970b0133f186ffd9970b image-full" alt="Voice-recognition-accuracy-rate-over-time" title="Voice-recognition-accuracy-rate-over-time" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133f186ffd9970b-800wi" border="0"  />   <p>   It doesn't work.  <p>   Despite ridiculous, <a href="http://www.codinghorror.com/blog/2006/12/moores-law-in-practical-terms.html">order of magnitude increases in computing power</a> over the last decade, we can't figure out how to get speech recognition accuracy above 80% -- when the baseline <i>human</i> voice transcription accuracy rate is anywhere from 96% to 98%!  <p>   <blockquote>   In 2001 recognition accuracy topped out at 80%, far short of HAL-like levels of comprehension. Adding data or computing power made no difference. Researchers at Carnegie Mellon University checked again in 2006 and found the situation <a href="http://www.cs.brandeis.edu/~marc/misc/proceedings/lrec-2006/pdf/802_pdf.pdf">unchanged</a>. With human discrimination as high as 98%, the unclosed gap left little basis for conversation. But sticking to a few topics, like numbers, helped. Saying “one” into the phone works about as well as pressing a button, approaching 100% accuracy. But loosen the vocabulary constraint and recognition begins to drift, turning to vertigo in the wide-open vastness of linguistic space.  </blockquote>   <p>   As Robert Fortner explained in <a href="http://robertfortner.posterous.com/the-unrecognized-death-of-speech-recognition">Rest in Peas: The Unrecognized Death of Speech Recognition</a>, after all these years, we're desperately far away from any sort of universal speech recognition that's useful or practical.  <p>   Now, we do have to clarify that we're talking about universal recognition: saying <i>anything</i> to a computer, and having it reliably convert that into a valid, accurate text representation. When you constrain the voice input to a more limited vocabulary -- say, just numbers, or only the names that happen to be in your telephone's address book -- it's not unreasonable to expect a high level of accuracy. I tend to think of this as "voice control" rather than "voice recognition".  <p>   Still, I think we're avoiding the real question: <b>is voice control, even hypothetically <i>perfect</i> voice control, more effective than the lower tech alternatives?</b> In my experience, speech is one of the least effective, inefficient forms of communicating with other human beings. By that, I mean ...  <ul>   <li>typical spoken communication tends to be off-the-cuff and ad-hoc. Unless you're extremely disciplined, on average you will be unclear, rambling, and excessively verbose.  <li>people tend to hear about half of what you say at any given time. <a href="http://www.codinghorror.com/blog/2006/03/the-value-of-repetition-again.html">If you're lucky</a>.  <li>spoken communication puts a highly disproportionate burden on the listener. Compare the time it takes to process a voicemail versus the time it takes to read an email.  </ul>   <p>   I am by no means <i>against</i> talking with my fellow human beings. I have a very deep respect for those rare few who are great communicators in the challenging medium of conversational speech. Though we've all been trained literally from birth how to use our voices to communicate, <b>voice communication remains filled with pitfalls and misunderstandings</b>. Even in the best of conditions.  <p>   So why in the world -- outside of a disability -- would I want to extend the creaky, rickety old bridge of voice communication to controlling my computer? Isn't there a better way?  <p>   Robert's <a href="http://robertfortner.posterous.com/the-unrecognized-death-of-speech-recognition">post</a> contains some examples in the comments from voice control enthusiasts:  <p>   <blockquote>   in addition to extremely accurate voice dictation, there are those really cool commands, like being able to say something like "search Google for Balloon Boy" or something like that and having it automatically open up your browser and enter the search term -- something like this is accomplished many times faster than a human could do it. Or, being able to total up a column of numbers in Microsoft Excel by saying simply "total this column" and seeing the results in a blink of an eye, literally.  </blockquote>   <p>   That's funny, because <b>I just fired up the Google app on my iPhone, said "balloon boy" into it, and got .. a search for "blue boy"</b>. I am not making this up. As for the Excel example, total <i>which</i> column? Let's assume you've dealt with the tricky problem of selecting what column you're talking about with only your voice. (I'm sorry, was it D5? B5?) Wouldn't it be many times faster to click the toolbar icon with your mouse, or press the keyboard command equivalent, to sum the column -- rather than methodically and tediously saying the words "sum this column" out loud?  <p>   I'm also trying to imagine a room full of people controlling their computers or phones using their voices. It's difficult enough to get work done in today's chatty work environments without the added burden of a floor full of people saying <a href="http://www.youtube.com/watch?v=Vxq9yj2pVWk">"zoom ... enhance"</a> to their computers all day long. Wouldn't we all end up hoarse <i>and</i> deaf?  <p>   Let's look at another practical example -- YouTube's <a href="http://googlesystem.blogspot.com/2009/11/youtube-audio-transcription.html">automatic speech recognition feature</a>. I clicked through to <a href="http://www.youtube.com/ucberkeley#p/u/0/BL9gmMzpRr4">the first UC Berkeley video</a> with this feature, clicked the CC (closed caption) icon, and immediately got .. this.  <p>   <img class="asset  asset-image at-xid-6a0120a85dcdae970b013484af2ad3970c" alt="Uc-berkeley-physics-lecture" title="Uc-berkeley-physics-lecture" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b013484af2ad3970c-800wi" border="0"  />   <p>   "Light exerts force on matter". But according to Google's automatic speech recognition, it's "like the search for some matter". Unsurprisingly, it does not get better from there. You'd be way more confused than educated if you had to learn this lecture from the automatic transcription.  <p>   Back when Joel Spolsky and I <a href="http://itc.conversationsnetwork.org/series/stackoverflow.html">had a podcast together</a>, <b>a helpful listener suggested using speech recognition to get a basic podcast transcript going</b>. Everything I knew about voice recognition told me this wouldn't help, but harm. What's worse: transcribing everything by hand, from scratch -- or correcting every third or fourth word in an auto-generated machine transcript? Maybe it's just me, but the friction of the huge error rate inherent in the machine transcript seems far more intimidating than a blank slate human transcription. The humans may not be particularly efficient, but they all <i>add</i> value along the way -- collective human judgment can editorially improve the transcript, by removing all the duplication, repetition, and "ums" of a literal, by-the-book transcription.  <p>   In 2004, Mike Bliss <a href="http://www.theblisspages.com/cms.php?mbid=147">composed a poem about voice recognition</a>. He then read it to voice recognition software on his PC, and rewrote it as recognized.  <p>   <table width="600" cellpadding="4" cellspacing="4">   <tr>   <td valign="top">   a poem by Mike Bliss<br>   <br>   like a baby, it listens<br>   it can't discriminate<br>   it tries to understand<br>   it reflects what it thinks you say<br>   it gets it wrong... sometimes<br>   sometimes it gets it right.<br>   One day it will grow up,<br>   like a baby, it has potential<br>   will it go to work?<br>   will it turn to crime?<br>   you look at it indulgently.<br>   you can't help loving it, can you?<br>   </td>   <td valign="top">   a poem by like myth<br>   <br>   like a baby, it nuisance<br>   it can't discriminate<br>   it tries to oven<br>   it reflects lot it things you say<br>   it gets it run sometimes<br>   sometimes it gets it right<br>   won't day it will grow bop<br>   Ninth a baby, it has provincial<br>   will it both to look?<br>   will it the two crime?<br>   you move at it inevitably<br>   you can't help loving it, cannot you?<br>   </td>   </tr>   </table>   <p>   The real punchline here is that Mike re-ran the experiment in 2008, and after 5 minutes of voice training, <b>the voice recognition got all but 2 words of the original poem correct!</b>   <p>   I suspect that's still not good enough in the face of the existing simpler alternatives. Remember handwriting recognition? It was all the rage in the era of the <a href="http://en.wikipedia.org/wiki/Newton_(platform)">Apple Newton</a>.   <p>   <img class="asset  asset-image at-xid-6a0120a85dcdae970b013484af3871970c image-full" alt="Doonesbury-newton" title="Doonesbury-newton" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b013484af3871970c-800wi" border="0"  /></a>   <p>   It wasn't as bad as Doonesbury made it out to be. I learned <a href="http://en.wikipedia.org/wiki/Graffiti_(Palm_OS)">Palm's Graffiti</a> handwriting recognition language and got fairly proficient with it. <b>More than ten years later, you'd expect to see <i>massively</i> improved handwriting recognition of some sort in today's iPads and iPhones and iOthers, right?</b> Well, maybe, if by "massively improved" you mean "nonexistent".  <p>   While it still surely has its niche uses, I personally don't miss handwriting recognition. Not even a little. And I can't help wondering if voice recognition will go the same way.  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/software/jira/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=JIRA%2B4" rel="nofollow">JIRA 4</a> - Simplify bug tracking for everyone involved. <a href="http://www.atlassian.com/software/jira/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=JIRA%2B4" rel="nofollow">Get started</a> from $10 for 10 users »    </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/06/whatever-happened-to-voice-recognition.html</guid>   			<pubDate>Mon, 21 Jun 2010 04:37:37 -0700</pubDate>   		</item>   	  		<item>   			<title>The Vast and Endless Sea</title>   			<link>http://www.codinghorror.com/blog/2010/06/the-vast-and-endless-sea.html</link>   			<description><![CDATA[><p>   After we created Stack Overflow, some people were convinced we had built a marginally better mousetrap for asking and answering questions. The inevitable speculation began: <b>can we use your engine to build a Q&A site about {topic}?</b> Our answer was Stack Exchange. Pay us $129 a month (and up), and you too can create a hosted Q&A community on our engine -- for whatever topic you like!  <p>   Well, I have a confession to make: my heart was never in Stack Exchange. It was a parallel effort in a parallel universe only tangentially related to my own. There's a whole host of reasons why, but if I had to summarize it in a sentence, I'd say that <b>money is poisonous to communities</b>. That $129/month doesn't sound like much -- and it isn't -- but the commercial nature of the enterprise permeated and distorted everything from the get-go.  <p>   (fortunately, the model is changing with <a href="http://blog.stackexchange.com/post/518474918/stack-exchange-2-0">Stack Exchange 2.0</a>, but that's a topic for another blog post.)  <p>   Yes, Stack Overflow Internet Services Incorporated&copy;&reg;&trade; is technically a business, even <a href="http://blog.stackoverflow.com/2010/05/announcing-our-series-a/">a venture capital backed business</a> now -- but I didn't co-found it because I wanted to make money. I co-founded it because <b>I wanted to build something cool that made the internet better</b>. Yes, selfishly for myself, of course, but also in conjunction with all of my fellow programmers, because I know <a href="http://www.codinghorror.com/blog/2008/09/stack-overflow-none-of-us-is-as-dumb-as-all-of-us.html">none of us is as dumb as all of us</a>.   <p>   Nobody is participating in Stack Overflow to <i>make money</i>. We're participating in Stack Overflow because &hellip;  <p>   <ul>   <li>We love programming  <li>We want to leave breadcrumb trails for other programmers to follow so they can avoid making the same dumb mistakes we did  <li>Teaching peers is one of the best ways to develop mastery  <li>We can follow our own interests wherever they lead  <li>We want to collectively build something great for the community with our tiny slices of effort  </ul>   <p>   I don't care how much you pay me, you'll never be able to recreate the incredibly satisfying feeling I get when <b>demonstrating mastery within my community of peers</b>. That's what we do on Stack Overflow: have <i>fun</i>, while making the internet one infinitesimally tiny bit better every day.  <p>   So is it any wonder that some claim <a href="http://meta.stackoverflow.com/questions/28642/why-do-i-get-more-satisfaction-out-of-participating-in-so-than-out-of-my-job">Stack Overflow is more satisfying than their real jobs?</a> Not to me.   <p>   If this all seems like a bunch of <b>communist hippie bullcrap</b> to you, I understand. It's hard to explain. But there is quite a bit of science documenting these strange motivations. Let's start with <a href="http://www.ted.com/talks/dan_pink_on_motivation.html">Dan Pink's 2009 TED talk</a>.  <p>   <object width="446" height="326"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param> <param name="flashvars" value="vu=http://video.ted.com/talks/dynamic/DanielPink_2009G-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/DanielPink-2009G.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=618&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=dan_pink_on_motivation;year=2009;theme=speaking_at_tedglobal2009;theme=the_creative_spark;theme=not_business_as_usual;event=TEDGlobal+2009;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="446" height="326" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talks/dynamic/DanielPink_2009G-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/DanielPink-2009G.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=618&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=dan_pink_on_motivation;year=2009;theme=speaking_at_tedglobal2009;theme=the_creative_spark;theme=not_business_as_usual;event=TEDGlobal+2009;"></embed></object>   <p>   Dan's talk centers on <a href="http://en.wikipedia.org/wiki/The_Candle_Problem">the candle problem</a>. Given the following three items &hellip;  <p>   <ol>   <li>A candle  <li>A box of thumbtacks  <li>A book of matches  </ol>   <p>   &hellip; how can you attach the candle to the wall?  <p>   It's not a very interesting problem on its own -- that is, until you try to <b>incentivize</b> teams to solve it:  <p>   <blockquote>   Now I want to tell you about an experiment using the candle problem by a scientist from Princeton named Sam Glucksberg. Here's what he did.   <p>   To the first group, he said, "I'm going to time you to establish norms, averages for how long it typically takes someone to solve this sort of problem."  <p>   To the second group, he said, "If you're in the top 25 percent of the fastest times you get five dollars. If you're the fastest of everyone we're testing here today you get 20 dollars." (This was many years ago. Adjusted for inflation, it's a decent sum of money for a few minutes of work.)  <p>   Question: How much faster did this group solve the problem?  <p>   Answer: It took them, on average, three and a half minutes longer. Three and a half minutes longer. Now this makes no sense, right? I mean, I'm an American. I believe in free markets. That's not how it's supposed to work. If you want people to perform better, you reward them. Give them bonuses, commissions, their own reality show. Incentivize them. That's how business works. But that's not happening here. <b>You've got a monetary incentive designed to sharpen thinking and accelerate creativity -- and it does just the opposite. It dulls thinking and blocks creativity.</b>   </blockquote>   <p>   It turns out that traditional carrot-and-stick incentives are only useful for repetitive, mechanical tasks. The minute you have to do anything even slightly complex that requires even a little problem solving without a clear solution or rules -- those incentives not only don't work, they <i>make things worse!</i>   <p>   Pink eventually wrote a book about this, <a href="http://www.amazon.com/dp/1594488843/?tag=codinghorror-20">Drive: The Surprising Truth About What Motivates Us</a>.  <p>   <a href="http://www.amazon.com/dp/1594488843/?tag=codinghorror-20"><img alt="Drive by Daniel H. Pink" title="Drive by Daniel H. Pink" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0134828e3150970c-800wi" style="border:1px solid silver" /></a>   <p>   There's no need to read the book; this clever ten minute whiteboard animation will walk you through the main points. If you view only one video today, view this one.  <p>   <object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/u6XAPnuFjJc&hl=en_US&fs=1&rel=0"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/u6XAPnuFjJc&hl=en_US&fs=1&rel=0" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></embed></object>   <p>   The concept of <a href="http://www.codinghorror.com/blog/2007/04/is-amazons-mechanical-turk-a-failure.html">intrinsic motivation</a> may not be a new one, but I find that very few companies are brave enough to actually implement them.  <p>   <b>I've tried mightily to live up to the ideals that Stack Overflow was founded on when building out my team.</b> I don't care when you come to work or what your schedule is. I don't care <a href="http://www.codinghorror.com/blog/2010/05/on-working-remotely.html">where in the world you live</a> (provided you have a great internet connection). I don't care how you do the work. I'm not going to micromanage you and assign you a queue of task items. There's no need.   <p>   <blockquote>   If you want to build a ship, don't drum up the men to gather wood, divide the work and give orders. Instead, teach them to yearn for the vast and endless sea.<br>   &ndash; Antoine de Saint Exupéry  </blockquote>   <p>   Because I know you yearn for the vast and endless sea, just like we do.  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/software/jira/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=JIRA%2B4" rel="nofollow">JIRA 4</a> - Simplify bug tracking for everyone involved. <a href="http://www.atlassian.com/software/jira/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=JIRA%2B4" rel="nofollow">Get started</a> from $10 for 10 users »    </td></tr>   </table> ]]></description>   			<guid>http://www.codinghorror.com/blog/2010/06/the-vast-and-endless-sea.html</guid>   			<pubDate>Tue, 01 Jun 2010 04:05:41 -0700</pubDate>   		</item>   	  		<item>   			<title>On Working Remotely</title>   			<link>http://www.codinghorror.com/blog/2010/05/on-working-remotely.html</link>   			<description><![CDATA[><p>   When I first <a href="http://www.codinghorror.com/blog/2008/03/choosing-your-own-adventure.html">chose my own adventure</a>, I didn't know what working remotely from home was going to be like. I had never done it before. As <i>programmers</i> go, I'm fairly social. Which still means I'm a borderline sociopath by normal standards. All the same, I was worried that I'd go stir-crazy with no division between my work life and my home life.  <p>   Well, I haven't gone stir-crazy yet. I think. But in building Stack Overflow, I have learned a few things about what it means to work remotely -- at least when it comes to programming. Our current team encompasses 5 people, distributed all over the USA, along with the team in NYC.  <p>   <img alt="Usa-stack-overflow-team-map" title="Usa-stack-overflow-team-map" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133ed51b2e9970b-800wi" border="0"  />   <p>   My first mistake was <a href="http://www.codinghorror.com/blog/2007/06/in-programming-one-is-the-loneliest-number.html">attempting to program alone</a>. I had weekly calls with my business partner, <a href="http://www.joelonsoftware.com/">Joel Spolsky</a>, which were quite productive in terms of figuring out what it was we were trying to do together -- but he wasn't writing code. I was coding alone. Really alone. One guy working all by yourself alone. This didn't work <i>at all</i> for me. I was unmoored, directionless, suffering from analysis paralysis, and barely able to get motivated enough to write even a few lines of code. I rapidly realized that I'd made a huge mistake in not <a href="http://www.codinghorror.com/blog/2009/02/whos-your-coding-buddy.html">having a coding buddy</a> to work with.  <p>   That situation <a href="http://www.codinghorror.com/blog/2010/01/cultivate-teams-not-ideas.html">rectified itself soon enough</a>, as I was fortunate enough to find one of my favorite old coding buddies was available. Even though Jarrod was in North Carolina and I was in California, the shared source code was the mutual glue that stuck us together, motivated us, and kept us moving forward. To be fair, we also had the considerable advantage of prior history, because we had worked together at a previous job. But the minimum bar to work remotely is to find <b>someone who loves code as much as you do</b>. It's &hellip; enough. Anything else on top of that -- old friendships, new friendships, a good working relationship -- is icing that makes working together all the sweeter. I eventually expanded the team in the same way by adding another old coding buddy, Geoff, who lives in Oregon. And again by adding Kevin, who I didn't know, but had built amazing stuff for us <i>without even being asked to</i>, from Texas. And again by adding Robert, in Florida, who I also didn't know, but spent so much time on every single part of our sites that I felt he had been running alongside our team the whole way, there all along.  <p>   The reason remote development worked for us, in retrospect, wasn't just shared love of code. I picked developers who I knew -- I had incontrovertible <i>proof</i> -- were amazing programmers. I'm not saying they're perfect, far from it, merely that they were top programmers by any metric you'd care to measure. <i>That's</i> why they were able to work remotely. Newbie programmers, or competent programmers who are phoning it in, are absolutely not going to have the moxie necessary to get things done remotely -- at least, not without a pointy haired manager, or grumpy old team lead, breathing down their neck. Don't even <i>think</i> about working remotely with anyone who doesn't freakin' <i>bleed</i> ones and zeros, and has a proven track record of getting things done.  <p>   While Joel certainly had a lot of high level input into what Stack Overflow eventually became, I only talked to him once a week, at best (these calls were <a href="http://itc.conversationsnetwork.org/series/stackoverflow.html">the genesis of our weekly podcast series</a>). <b>I had a strong, clear vision of what I wanted Stack Overflow to be, and how I wanted it to work.</b> Whenever there was a question about functionality or implementation, my team was able to rally around me and collectively make decisions we liked, and that I personally felt were in tune with this vision. And if you know me at all, you know <a href="http://www.codinghorror.com/blog/2004/10/just-say-no.html">I'm not shy about saying no</a>, either. We were able to build exactly what we wanted, exactly how we wanted.  <p>   Bottom line, we were <a href="http://www.youtube.com/results?search_query=we're+on+a+mission+from+god">on a mission from God</a>. And we still are.  <p>   So, there are a few basic ground rules for remote development, at least as I've seen it work:  <p>   <ul>   <li>The minimum remote team size is two. Always have a buddy, even if your buddy is on another continent halfway across the world.  <li>Only grizzled veterans who absolutely <i>love</i> to code need apply for remote development positions. Mentoring of newbies or casual programmers simply doesn't work at all remotely.  <li>To be effective, remote teams need full autonomy and a leader (PM, if you will) who has a strong vision <i>and</i> the power to fully execute on that vision.  </ul>   <p>   This is all well and good when you have a remote team size of <i>three</i>, as we did for the bulk of Stack Overflow development. And all in the same country. <a href="http://blog.stackoverflow.com/2010/05/announcing-our-series-a/">Now we need to grow the company</a>, and I'd like to grow it in distributed fashion, by hiring other amazing developers from around the world, many of whom I have met through Stack Overflow itself. <p>   <b>But how do you scale remote development?</b> Joel had some deep seated concerns about this, so I tapped one of my heroes, Miguel de Icaza -- who I'm proud to note is on <a href="http://stackoverflow.com/about/management#advisors">our all-star board of advisors</a> -- and he was generous enough to give us some personal advice based on his experience running the <a href="http://www.mono-project.com/">Mono project</a>, which has dozens of developers distributed all over the world.  <p>   <img alt="Time-zone-differences" title="Time-zone-differences" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0133ed51a674970b-800wi" border="0"  />   <p>   At the risk of summarizing mercilessly (and perhaps too much), I'll boil down Miguel's advice the best I can. There are three tools you'll need in place if you plan to grow a large-ish and still functional remote team:  <p>   <ol>   <li><b>Real time chat</b><br>   <br>   When your team member lives in Brazil, you can't exactly walk by his desk to ask him a quick question, or bug him about something in his recent checkin. Nope. You need a way to <i>casually</i> ping your fellow remote team members and get a response back quickly. This should be low friction and available to all remote developers at all times. IM, IRC, some web based tool, laser beams, smoke signals, carrier pigeon, two tin cans and a string: whatever. As long as everyone really <i>uses</i> it. <br>   <p>   We're currently experimenting with <a href="http://campfirenow.com/">Campfire</a>, but whatever floats your boat and you can get your team to consistently <i>use</i>, will work. Chat is the most essential and omnipresent form of communication you have when working remotely, so you need to make absolutely sure it's functioning before going any further.  <p>   <li><b>Persistent mailing list</b><br>   <br>   Sure, your remote team may know the details of <i>their</i> project, but what about all the other work going on? How do they find out about that stuff or even know it exists in the first place? You need a virtual bulletin board: a place for announcements, weekly team reports, and meeting summaries. This is where a classic old-school mailing list comes in handy.  <p>   We're using <a href="http://groups.google.com/">Google Groups</a> and although it's old school in spades, it works plenty well for this. You can get the emails as they arrive, or view the archived list via the web interface. One word of caution, however. Every time you see something arrive in your inbox from the mailing list you better believe, in your heart of hearts, that it contains useful information. The minute the mailing list becomes just another "whenever I have time to read that stuff", noise engine, or distraction from work &hellip; you've let someone cry wolf too much, and ruined it. So be very careful. Noisy, argumentative, or useless things posted to the mailing list should be punishable by death. Or noogies.  <p>   <li><b>Voice and video chat</b><br>   <p>   As much as I love ASCII, sometimes faceless ASCII characters just aren't enough to capture the full intentions and feelings of the human being behind them. When you find yourself sending kilobytes of ASCII back and forth, and still are unsatisfied that you're <i>communicating</i>, you should instill a reflexive habit of "going voice" on your team.  <p>   Never underestimate the power of actually <i>talking</i> to another human being. I know, I know, the whole reason we got into this programming thing was to <i>avoid</i> talking to other people, but bear with me here. You can't be face to face on a remote team without flying 6 plus hours, and who the heck has that kind of time? I've got work I need to get done! Well, the next best thing to hopping on a plane is to fire up <a href="http://www.skype.com/">Skype</a> and have a little voice chat. Easy peasy. All that human nuance which is totally lost in faceless ASCII characters (yes, even with our old pal <a href="http://en.wikipedia.org/wiki/Emoticon">*&lt;:-)</a>) will come roaring back if you <i>regularly</i> schedule voice chats. I recommend at least once a week at an absolute minimum; they don't have to be long meetings, but it sure helps in understanding the human being behind all those awesome checkins.  <br>   </ol>   <p>   Nobody hates meetings and process claptrap more than I do, but there is a certain amount of process you'll need to keep a bunch of loosely connected remote teams and developers in sync.  <p>   <ol>   <li><b>Monday team status reports</b><br>   <p>   Every Monday, as in <a href="http://www.youtube.com/results?search_query=somebody's+got+a+case+of+the+mondays">somebody's-got-a-case-of-the</a>, each team should produce a brief, summarized rundown of:  <p>   <ul>   <li>What we did <u>last week</u>   <li>What we're planning to do <u>this week</u>   <li>Anything that is <u>blocking</u> us or we are <u>concerned</u> about  </ul>   <p>   This doesn't have to be (and in fact <i>shouldn't</i> be) a long report. The briefer the better, but do try to capture all the useful highlights. Mail this to the mailing list every Monday like clockwork. Now, how many "teams" you have is up to you; I don't think this needs to be done at the individual developer level, but you could.  <p>   <li><b>Meeting minutes</b><br>   <p>   Any time you conduct what you would consider to be a "meeting" with someone else, <u>take minutes</u>! That is, write down what happened in bullet point form, so those remote team members who couldn't be there can benefit from -- or at least hear about -- whatever happened.  <p>   Again, this doesn't have to be long, and if you find taking meeting minutes onerous then you're probably doing it wrong. A simple bulleted list of sentences should suffice. We don't need to know every little detail, just the big picture stuff: <u>who</u> was there? What <u>topics</u> were discussed? What <u>decisions</u> were made? What are the <u>next steps</u>?  </ol>   <p>   Both of the above should, of course, be mailed out to the mailing list as they are completed so everyone can be notified. You do have a mailing list, right? Of course you do!  <p>   If this seems like a lot of jibba-jabba, well, that's because <b>remote development is hard</b>. It takes discipline to make it all work, certainly more discipline than piling a bunch of programmers into the same cubicle farm. But when you imagine what this kind of intellectual work -- not just programming, but anything where you're working in mostly thought-stuff -- will be like in ten, twenty, even thirty years &hellip; don't you think it will look a lot like what happens every day <i>right now</i> on Stack Overflow? That is, a programmer in Brazil helping a programmer in New Jersey solve a problem?  <p>   If I have learned anything from Stack Overflow it is that the world of programming is <a href="http://www.codinghorror.com/blog/2009/03/the-ugly-american-programmer.html">truly global</a>. I am honored to meet these brilliant programmers from every corner of the world, even if only in a small way through a website. Nothing is more exciting for me than the prospect of adding international members to the Stack Overflow team. The development of Stack Overflow should be reflective of what Stack Overflow <i>is</i>: an international effort of like-minded -- and dare I say <i>totally awesome</i> -- programmers. I wish I could hire each and every one of you. OK, maybe I'm a little biased. But to me, that's how awesome the Stack Overflow community is.  <p>   I believe <b>remote development represents the future of work</b>. If we have to spend a little time figuring out how this stuff works, and maybe even make some mistakes along the way, it's worth it. As far as I'm concerned, the future is now. Why wait?  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/starter-day/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=Starter%2BDay" rel="nofollow">Atlassian Starter Day</a> - Learn how startups like Boxee and Pandora broke through. <a href="http://www.atlassian.com/starter-day/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=Starter%2BDay" rel="nofollow">Sign-up today »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/05/on-working-remotely.html</guid>   			<pubDate>Thu, 06 May 2010 06:27:15 -0700</pubDate>   		</item>   	  		<item>   			<title>What's Wrong With CSS</title>   			<link>http://www.codinghorror.com/blog/2010/04/whats-wrong-with-css.html</link>   			<description><![CDATA[><p>   We're currently in the midst of a <a href="http://www.codinghorror.com/blog/2005/12/the-css-zen-garden-and-aspnet.html">CSS Zen Garden type excerise</a> on our family of Q&A websites, which I affectionately refer to as <a href="http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/">"the Trilogy"</a>:  <p>   <ul>   <li><a href="http://serverfault.com">Server Fault</a>   <li><a href="http://superuser.com">Super User</a>   <li><a href="http://stackoverflow.com">Stack Overflow</a>   <li><a href="http://meta.stackoverflow.com">Meta Stack Overflow</a>   </ul>   <p>   (In case you were wondering, yes, meta <i>is</i> the <a href="http://en.wikipedia.org/wiki/The_Star_Wars_Holiday_Special">Star Wars Holiday Special</a>.)  <p>   These sites all run the same core engine, but the logo, domain, and CSS "skin" that lies over the HTML skeleton is different in each case:  <p>   <table>   <tr>   <td>   <a href="http://serverfault.com"><img alt="serverfault.com screenshot" title="serverfault screenshot" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01348044a079970c-800wi" border="0" style="border:1px solid silver" /></a>   <td>   <a href="http://superuser.com"><img alt="superuser.com screenshot" title="superuser screenshot" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01348044a20a970c-800wi" border="0" style="border:1px solid silver" /></a>   </tr>   <tr>   <td>   <a href="http://meta.stackoverflow.com"><img alt="meta.stackoverflow screenshot" title="meta.stackoverflow screenshot" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01348044a6f4970c-800wi" border="0"  style="border:1px solid silver" /></a>   <td>   <a href="http://stackoverflow.com"><img alt="stackoverflow.com screenshot" title="stackoverflow.com screenshot" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01348044a788970c-800wi" border="0"   style="border:1px solid silver" />   </tr>   </table>   <p>   They are not <i>terribly</i> different looking, it's true, but we also want them to be recognizable as a family of sites.  <p>   We're working with two amazing designers, <a href="http://www.8164.org/">Jin Yang</a> and <a href="http://uxhero.com/">Nathan Bowers</a>, who are helping us whip the CSS and HTML into shape so they can produce a set of about 10 different Zen Garden designs. As new sites in our network <a href="http://blog.stackexchange.com/post/518474918/stack-exchange-2-0">get democracied into being</a>, these designs will be used as a palette for the community to choose from. (And, later, the community will decide on a domain name and logo as well.)  <p>   Anyway, I bring this up not because <i><a href="http://www.google.com/images?q=my+pokemans+let+me+show+you">my pokemans, let me show you them</a></i>, but because I have to personally maintain four different CSS files. And that number is only going to get larger. <i>Much</i> larger. That scares me a little.  <p>   Most of all, what I've learned from this exercise in site theming is that <b>CSS is kind of painful</b>. I fully support CSS as a (mostly) functional <a href="http://www.codinghorror.com/blog/2008/05/understanding-model-view-controller.html">user interface Model-View-Controller</a>. But even if you have extreme HTML hygiene and Austrian levels of discipline, CSS has some <a href="http://en.wikipedia.org/wiki/Cascading_Style_Sheets#Limitations">serious limitations</a> in practice.  <p>   Things in particular that bite us a lot:  <p>   <ul>   <li>Vertical alignment is a giant, hacky PITA. (Tables work great for this though!)  <li>Lack of variables so we have to repeat colors all over the place.  <li>Lack of nesting so we have to repeat huge blocks of CSS all over the place.  </ul>   <p>   In short, CSS violates the living crap out of <a href="http://www.codinghorror.com/blog/2007/03/curlys-law-do-one-thing.html">the DRY principle</a>. You are <i>constantly</i> and <i>unavoidably</i> repeating yourself.  <p>   That's why I'm so intrigued by two Ruby gems that attempt to directly address the deficiencies of CSS.  <p>   1. <b><a href="http://lesscss.org/">Less CSS</a></b>   <p>   <table width="700">   <tr>   <td valign="top">   <pre>   /* CSS */     #header {    -moz-border-radius: 5;    -webkit-border-radius: 5;    border-radius: 5;  }     #footer {    -moz-border-radius: 10;    -webkit-border-radius: 10;    border-radius: 10;  }  </pre>   </td>   <td valign="top">   <pre>   // LessCSS     .rounded_corners (@radius: 5px) {    -moz-border-radius: @radius;    -webkit-border-radius: @radius;    border-radius: @radius;  }     #header {    .rounded_corners;  }     #footer {    .rounded_corners(10px);  }  </pre>   </td>   </table>   <p>   2. <b><a href="http://sass-lang.com/">SASS</a></b>   <p>   <table width="700">   <tr>   <td valign="top">   <pre>   /* CSS */     .content_navigation {    border-color: #3bbfce;    color: #2aaebd;  }     .border {    padding: 8px;    margin: 8px;    border-color: #3bbfce;  }  </pre>   </td>   <td valign="top">   <pre>   // Sass     !blue = #3bbfce  !margin = 16px     .content_navigation    border-color = !blue    color = !blue - #111     .border    padding = !margin / 2    margin = !margin / 2    border-color = !blue  </pre>   </td>   </tr>   </table>   <p>   As you can see, in both cases we're <b>transmogrifying CSS into a bit more of a programming language</b>, rather than the static set of layout rules it currently exists as. Behind the scenes, we're generating plain vanilla CSS using these little dynamic languages. This could be done at project build time, or even dynamically on every page load if you have a good caching strategy.  <p>   I'm not sure how many of these improvements <a href="http://www.w3.org/Style/CSS/current-work">CSS3</a> will bring, never mind when the bulk of browsers in the world will support it. But I definitely feel that the core changes identified in both <a href="http://lesscss.org/">Less CSS</a> and <a href="http://sass-lang.com/">SASS</a> address very real pain points in practical CSS use. It's worth checking them out to understand why they exist, what they bring to the table, and how you could possibly adopt some of these strategies in your own CSS and your favorite programming language.  <p>   <table>   <tr><td class="welovecodinghorror">   [advertisement] <a href="http://www.atlassian.com/starter-day/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=Starter%2BDay" rel="nofollow">Atlassian Starter Day</a> - Learn how startups like Boxee and Pandora broke through. <a href="http://www.atlassian.com/starter-day/?utm_source=Coding%2BHorror&utm_medium=Text%2BAd&utm_campaign=Starter%2BDay" rel="nofollow">Sign-up today »</a>   </td></tr>   </table>   <p>]]></description>   			<guid>http://www.codinghorror.com/blog/2010/04/whats-wrong-with-css.html</guid>   			<pubDate>Fri, 30 Apr 2010 07:49:21 -0700</pubDate>   		</item>   	  	</channel>   </rss><!-- ph=1 --><!-- nhm:from_kauri --> 